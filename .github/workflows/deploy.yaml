name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main
    paths:
      - 'docnest_backend/**'
      - '.github/workflows/**'

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: docnest-backend
  ECS_CLUSTER: docnest-cluster
  ECS_SERVICE: docnest-ecs-service-2
  ECS_TASK_DEFINITION: docnest-backend-td
  CONTAINER_NAME: docnest-container

jobs:

  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Verify AWS credentials
      run: |
        aws sts get-caller-identity
        if [ $? -ne 0 ]; then
          echo "Failed to verify AWS credentials"
          exit 1
        fi

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        cd docnest_backend
        docker build -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG .
        docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Download task definition
      run: |
        aws ecs describe-task-definition --task-definition ${{ env.ECS_TASK_DEFINITION }} \
        --query 'taskDefinition' \
        --output json > task-definition.json
      
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}
      
    - name: Register new task definition
      run: |
        aws ecs register-task-definition --cli-input-json file://task-definition.json

    - name: Deploy Amazon ECS task definition
      run: |
        aws ecs update-service \
        --cluster ${{ env.ECS_CLUSTER }} \
        --service ${{ env.ECS_SERVICE }} \
        --task-definition ${{ env.ECS_TASK_DEFINITION }} \
        --force-new-deployment